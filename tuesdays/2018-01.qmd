---
title: "2018-01"
format: html
---

## Getting the data

2018-04-02

Average tuition and educational attainment in the USA.

Average in-state tuition and fees for one year of full-time study at 
public four-year institutions 

```{r}
library(tidytuesdayR)
library(tidyverse)

tuesdata <- tt_load(2018, week = 1) 
tuesdata |> names()
tuesdata <- tuesdata$us_avg_tuition
```

## Exploring the data


```{r}
head(tuesdata)
```

13 variables - State and years, in a not very tidy format - `2004-05` indicates
that the tuition is for the academic year 2004-2005.

```{r}
summary(tuesdata)
```

## Tidying up
Lad os antage at det akademiske år starter 1. september.

```{r}
tidy_tuesdata <- tuesdata |> 
    pivot_longer(cols = where(is.numeric), 
                 names_to = "year", 
                 values_to = "tuition") |> 
    mutate(year = str_extract(year, "\\d{4}"),
           year = str_c(year, "-09-01"),
           year = as_date(year))
```

First visualisation

```{r}
tidy_tuesdata |> 
    ggplot(aes(x = year, y = tuition, color = State)) +
        geom_line()
```

Spaghetti. And too many states

Hvilken er den mest gennemsnitlige stat?

Og vi skal have lavet et kort

Rang for hver stat for hvert år
```{r}
tidy_tuesdata |> 
    group_by(year) |> 
    mutate(rang = rank(tuition, ties.method = "first")) |> 
    mutate(State = factor(State, levels = rang)) |> 
    ungroup() |> 
    filter(year(year) == 2004) 
```


Animeret ranked barchart

Choropleth


```{r}
library(gganimate)

p2 <- tidy_tuesdata |> 
    group_by(year) |> 
    mutate(rang = rank(tuition, ties.method = "first")) |> 
    ungroup() |> 

    ggplot(aes(xmin = 0, xmax = tuition, y = rang, ymin = rang -0.4, ymax = rang +0.4, fill = State)) +
    geom_rect() +
    geom_text(aes(x=0, label= State), hjust = "right")  +
    facet_wrap(~year) +
    facet_null() +
    transition_time(year) +
    theme_void() +
    theme(legend.position = "none")
p2

```

det er lidt uoverskueligt. Måske udvælge de to der falder og stiger mest - og nøjes med at 
have farver på dem?


```{r}
most_change <- tidy_tuesdata |> 
    group_by(year) |> 
    mutate(rang = rank(tuition, ties.method = "first")) |> 
    filter(year(year) %in% c(2004, 2015)) |> 
    ungroup() |> 
    group_by(State) |> 
    arrange(year) |> 
    summarise(rang_change = last(rang) - first(rang)) |> 
    ungroup() |> 
    arrange(desc(abs(rang_change))) |> 
    group_by(sign(rang_change)) |> 
    slice(1) |> 
    ungroup() |> 
    rename(color = `sign(rang_change)`) |> 
    select(-rang_change)

    
```


```{r}
library(gganimate)

p3 <- tidy_tuesdata |> 
    group_by(year) |> 
    mutate(rang = rank(tuition, ties.method = "first")) |> 
    ungroup() |> 
    left_join(most_change) |>
    
    ggplot(aes(xmin = 0, xmax = tuition, y = rang, ymin = rang -0.4, ymax = rang +0.4, fill = color)) +
    geom_rect() +
    geom_text(aes(x=0, label= State), hjust = "right")  +
    facet_wrap(~year) +
    facet_null() +
    transition_time(year) +
    theme_void() +
    theme(legend.position = "none")
p3

```



Hep. Men juster på farver og hastighed


Og så en choropleth:

```{r}
library(usmap); library(ggplot2)



df <- tidy_tuesdata |> filter(year(year) == 2013) |> 
  rename(state = State)
choro <- plot_usmap(data = df, values = "tuition", regions = "states")+
  scale_fill_viridis_c(option = "C", name = "Værdi") +
  theme(legend.position = "left")

choro
```


```{r}
class(choro)
```